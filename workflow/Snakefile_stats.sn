# -*- snakemake -*-

'''
 The snakemake file goes through part 3 of creating a summary of the simulated variants and the extracted ancestor from the previous steps. The final output is an html file (to be opened in a browser) with tables and graphs 

 :Author: Julia HÃ¶glund
 :Date: 19-5-2023
 :Usage: snakemake -p --snakefile <snakefile script>

 Params can be adjusted for any given species of interest. 
'''

## Targets
# Code collecting output files from this part of the pipeline
all_outputs.append('output/start_step3.txt')
all_outputs.append('output/finished_generate_data.txt')
all_outputs.append('output/finished_create_summary.txt')
 
## rules
rule graphs:
    input: 
        SCRIPTS_3 + 'generate_summary_info.R'
    output: 
        'output/start_step3.txt'
    shell:
        '''
        touch output/start_step3.txt
        '''

rule create_summary:
    input:
        'output/start_step3.txt'
    params:
        script = SCRIPTS_2 + 'generate_summary_info.R',
        vcf = config['13_vcf'],
        snp = config['13_snp'],
        indels = config['13_indels'],
        snpFiltered = config['13_snpFiltered'],
        indelFiltered = config['13_indelFiltered'],
        reference = config['13_reference'],
        chromosome = config['13_chromosome'],
        ancestor = config['13_ancestor'],
        parameters = config['13_parameters'],
        simulated = config['13_simulated']

    output:
        'output/finished_create_summary.txt'

    shell:
        '''
        Rscript {params.script} \
        -v {params.vcf} \
        -s {params.snp} \
        -i {params.indels} \
        -t {params.snpFiltered} \
        -j {params.indelFiltered} \
        -r {params.reference} \
        -c {params.chromosome} \
        -a {params.ancestor} \
        -p {params.parameters} \
        -u {params.simulated}
        '''

rule create_datafiles:
    input:
        'output/finished_create_summary.txt'
    params:
        script = SCRIPTS_2 + 'generate_graphs.Rmd',
        path = config['14_path'],
        tree = config['14_tree'],
        ideogram = config['14_ideogram'],
        ingroup = config['14_ingroup'],
        outgroup = config['14_outgroup']

    output:
        'output/finished_generate_data.txt'

    shell:
        '''
        Rscript -e 'library(rmarkdown)'; rmarkdown::render("{params.script}", \
        params = list( \
         tree = '{params.tree}', \
         ideogram = '{params.ideogram}', \
         ingroup = '{params.ingroup}', \
         outgroup = '{params.outgroup}' \
         ))

         mv workflow/step_3_simulation_report/scripts/generate_graphs.html output/
        '''